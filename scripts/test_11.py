"""
该代码用于PyTorch的学习
"""

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #
# tqdm argparse # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # ##
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

########################################################################################################################
# tqdm：进度条工具，用于在循环或耗时操作中直观显示进度
# tqdm(序列/列表/生成器等)：将序列/列表/生成器包装为一个带有进度条的可迭代对象，每次迭代时，进度条自动前进一步
# set_postfix()：用于在进度条旁边动态添加其他信息
########################################################################################################################

from tqdm import tqdm
import time

# 将序列range(10)包装为一个带有进度条的可迭代对象
for i in tqdm(range(10), colour="green"):
    time.sleep(0.05)

# 自定义描述和单位
epochs = 10
for epoch in range(epochs):
    tqdm_test = tqdm(range(10), desc=f"Epoch {epoch}/{epochs}", colour="green")     # 创建一个进度条
    for tqdm_per in enumerate(tqdm_test):                                           # 对进度条进行迭代更新
        time.sleep(0.1)                                                             # 模拟运行耗时
        tqdm_test.set_postfix(trans_loss=123)                                       # 在进度条旁边动态添加其他信息


########################################################################################################################

import argparse

parser = argparse.ArgumentParser(description="描述信息")

parser.add_argument("")